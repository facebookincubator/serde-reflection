version: 3
jobs:
  lint:
    docker:
      - image: circleci/rust:buster
    steps:
      - checkout
      - run:
          name: Version Information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Install Rust Components
          command: rustup component add rustfmt clippy
      - run:
          name: Component Version Information
          command: cargo fmt -- --version; cargo clippy -- --version
      - run:
          name: Setup Env
          command: |
            echo 'export RUSTFLAGS="-D warnings"' >> $BASH_ENV
      - run:
          name: Lint (rustfmt)
          command: |
            cargo fmt -- --check
      - run:
          name: Lint (clippy)
          command: |
            cargo clippy --all-features
  build:
    docker:
      - image: circleci/rust:buster
    steps:
      - checkout
      - run:
          name: Setup Additional Languages
          command: |
            sudo apt-get update && sudo apt-get upgrade -y
            sudo apt-get install python3-all-dev python3-numpy
      - run:
          name: Version Information
          command: rustc --version; cargo --version; rustup --version; python3 --version
      - run:
          name: Setup Env
          command: |
            echo 'export RUSTFLAGS="-D warnings"' >> $BASH_ENV
      - run:
          name: Build and Test
          # Build all targets to ensure examples are built as well.
          command: |
            cargo build --all-targets --all-features
            cargo test --all-features

  # docs-build and docs-deploy are adapted from
  # https://circleci.com/blog/deploying-documentation-to-github-pages-with-continuous-integration/.
  docs-build:
    docker:
      - image: circleci/rust:buster
    steps:
      - checkout
      - run:
          name: Version Information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Generate documentation
          command: |
            cargo doc --all-features
      - persist_to_workspace:
          root: target
          paths: doc

  docs-deploy:
    docker:
      - image: node:8.10.0
    steps:
      - checkout
      - attach_workspace:
          at: target
      - run:
          name: Disable jekyll builds
          command: touch target/doc/.nojekyll
      - run:
          name: Install and configure gh-pages
          command: |
            npm install -g --silent gh-pages@2.0.1
            git config user.email "ci-build@calibra.com"
            git config user.name "ci-build"
      - add_ssh_keys:
          fingerprints:
            - "f9:01:7b:01:d0:ea:df:5e:c4:84:38:b7:92:93:e5:c8"
      - run:
          name: Deploy to gh-pages branch
          command: |
            gh-pages --dotfiles --message "[skip ci] documentation update" --dist target/doc

workflows:
  version: 2
  build:
    jobs:
      - lint
      - build
      - docs-build
      - docs-deploy:
          requires:
            - lint
            - build
            - docs-build
          filters:
            branches:
              only: master
